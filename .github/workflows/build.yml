name: Build and Push Images

on:
  release:
    types: [created]

jobs:
  build-images:
    name: Build and Push Images
    runs-on: self-hosted
    steps:
      - uses: actions/checkout@v4
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Extract metadata for backend
        id: meta-backend
        uses: docker/metadata-action@v5
        with:
          images: thefnordling/cr-browser-backend
          tags: |
            type=raw,value=latest
            type=raw,value=${{ github.event.release.tag_name }}
            type=sha,prefix=sha-
      
      - name: Extract metadata for frontend
        id: meta-frontend
        uses: docker/metadata-action@v5
        with:
          images: thefnordling/cr-browser-frontend
          tags: |
            type=raw,value=latest
            type=raw,value=${{ github.event.release.tag_name }}
            type=sha,prefix=sha-
      
      - name: Build and push backend
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./backend/Dockerfile
          push: true
          tags: ${{ steps.meta-backend.outputs.tags }}
          labels: ${{ steps.meta-backend.outputs.labels }}
          cache-from: type=registry,ref=thefnordling/cr-browser-backend:latest
          cache-to: type=inline
      
      - name: Build and push frontend
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./frontend/Dockerfile
          push: true
          tags: ${{ steps.meta-frontend.outputs.tags }}
          labels: ${{ steps.meta-frontend.outputs.labels }}
          cache-from: type=registry,ref=thefnordling/cr-browser-frontend:latest
          cache-to: type=inline
      
      - name: Deploy to production
        if: github.event.release.prerelease == false
        env:
          VERSION: ${{ github.event.release.tag_name }}
        run: |
          docker service update --image thefnordling/cr-browser-backend:${VERSION} cr-browser_backend --force || true
          docker service update --image thefnordling/cr-browser-frontend:${VERSION} cr-browser_frontend --force || true
          docker stack deploy --with-registry-auth --prune -c deploy/docker-compose.yml cr-browser
